@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Futuristic Dark Theme with Neon Accents */
    --background: 220 13% 8%;
    --foreground: 195 100% 90%;

    --card: 225 15% 12%;
    --card-foreground: 195 100% 90%;

    --popover: 225 15% 12%;
    --popover-foreground: 195 100% 90%;

    --primary: 195 100% 50%;
    --primary-foreground: 220 13% 8%;

    --secondary: 280 100% 70%;
    --secondary-foreground: 220 13% 8%;

    --muted: 220 8% 20%;
    --muted-foreground: 195 20% 60%;

    --accent: 315 100% 60%;
    --accent-foreground: 220 13% 8%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 195 100% 90%;

    --border: 220 8% 25%;
    --input: 220 8% 15%;
    --ring: 195 100% 50%;

    --radius: 0.75rem;

    /* Custom Neon Colors */
    --neon-cyan: 195 100% 50%;
    --neon-purple: 280 100% 70%;
    --neon-pink: 315 100% 60%;
    --neon-green: 120 100% 50%;
    --neon-orange: 30 100% 50%;

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--neon-cyan)), hsl(var(--neon-purple)));
    --gradient-accent: linear-gradient(135deg, hsl(var(--neon-pink)), hsl(var(--neon-orange)));
    --gradient-subtle: linear-gradient(180deg, hsl(var(--background)), hsl(220 13% 12%));

    /* Shadows */
    --shadow-neon: 0 0 20px hsl(var(--neon-cyan) / 0.3);
    --shadow-glow: 0 0 40px hsl(var(--neon-purple) / 0.2);
    --shadow-intense: 0 0 60px hsl(var(--neon-pink) / 0.4);

    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-mono;
    background-image: 
      radial-gradient(circle at 20% 20%, hsl(var(--neon-cyan) / 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 80%, hsl(var(--neon-purple) / 0.1) 0%, transparent 50%),
      radial-gradient(circle at 40% 60%, hsl(var(--neon-pink) / 0.05) 0%, transparent 50%);
    background-attachment: fixed;
  }
}

@layer components {
  /* Neon glow effects */
  .neon-glow {
    box-shadow: var(--shadow-neon);
    transition: var(--transition-smooth);
  }

  .neon-glow:hover {
    box-shadow: var(--shadow-intense);
  }

  /* Pulse animation for scanning */
  .pulse-scan {
    animation: pulse-glow 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 0 5px hsl(var(--neon-cyan) / 0.5);
    }
    50% {
      box-shadow: 0 0 20px hsl(var(--neon-cyan) / 0.8), 0 0 40px hsl(var(--neon-cyan) / 0.3);
    }
  }

  /* Glitch effect for completed items */
  .glitch-effect {
    position: relative;
    overflow: hidden;
  }

  .glitch-effect::before,
  .glitch-effect::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: transparent;
    opacity: 0.8;
  }

  .glitch-effect::before {
    animation: glitch-1 0.5s linear infinite;
    color: hsl(var(--neon-cyan));
    z-index: -1;
  }

  .glitch-effect::after {
    animation: glitch-2 0.5s linear infinite;
    color: hsl(var(--neon-pink));
    z-index: -2;
  }

  @keyframes glitch-1 {
    0%, 100% { transform: translateX(0); }
    20% { transform: translateX(-2px); }
    40% { transform: translateX(2px); }
    60% { transform: translateX(-1px); }
    80% { transform: translateX(1px); }
  }

  @keyframes glitch-2 {
    0%, 100% { transform: translateY(0); }
    20% { transform: translateY(-1px); }
    40% { transform: translateY(1px); }
    60% { transform: translateY(-2px); }
    80% { transform: translateY(2px); }
  }

  /* Holographic border effect */
  .holo-border {
    position: relative;
    background: linear-gradient(45deg, transparent, hsl(var(--neon-cyan) / 0.1), transparent);
    border: 1px solid hsl(var(--border));
  }

  .holo-border::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    padding: 1px;
    background: var(--gradient-primary);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: xor;
    pointer-events: none;
  }

  /* Scanning animation */
  .scanning-line {
    position: relative;
    overflow: hidden;
  }

  .scanning-line::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: var(--gradient-primary);
    animation: scan-line 2s linear infinite;
  }

  @keyframes scan-line {
    0% { left: -100%; }
    100% { left: 100%; }
  }
}